/**
 * Класс формы авторизации
 * Отображает окно с полями для ввода логина и пароля
 */
Ext.define('TradingApp.view.LoginForm', {
    // Наследуемся от базового класса окна ExtJS
    extend: 'Ext.window.Window',
    
    // Базовая конфигурация окна
    title: 'Вход в систему',          // Заголовок окна
    width: 300,                       // Ширина окна в пикселях
    autoShow: true,                   // Автоматически показывать окно при создании
    resizable: false,                 // Запретить изменение размера окна
    draggable: false,                 // Запретить перетаскивание окна
    modal: true,                      // Сделать окно модальным (блокирует взаимодействие с основным интерфейсом)
    
    /**
     * Метод инициализации компонента
     * Вызывается автоматически при создании экземпляра класса
     */
    initComponent() {
        /**
         * Проверяет правильность введенных учетных данных
         * @param {Object} values - Объект с введенными значениями (логин и пароль)
         * @returns {boolean} - Результат проверки
         */
        const validateCredentials = (values) => {
            return values.username === 'admin' && values.password === 'padmin';
        };

        /**
         * Обрабатывает попытку входа в систему
         * @param {Ext.form.Panel} form - Ссылка на форму с полями ввода
         */
        const handleLogin = (form) => {
            // Получаем введенные значения из формы
            const values = form.getValues();
            
            // Проверяем учетные данные
            if (validateCredentials(values)) {
                // Если данные верны, скрываем форму входа
                form.up('window').hide();
                // Создаем главное окно приложения
                Ext.create('TradingApp.view.MainWindow');
            } else {
                // Если данные неверны, показываем сообщение об ошибке
                Ext.Msg.alert('Ошибка', 'Неверный логин или пароль');
            }
        };

        // Применяем конфигурацию к компоненту
        Ext.apply(this, {
            items: [{
                // Создаем форму
                xtype: 'form',
                bodyPadding: 15,                  // Внутренние отступы формы
                // Настройки по умолчанию для всех полей формы
                defaults: {
                    xtype: 'textfield',           // Тип поля - текстовое
                    anchor: '100%',               // Растягивать поле на всю ширину
                    labelWidth: 80,               // Ширина метки поля
                    margin: '0 0 10 0'            // Отступ снизу между полями
                },
                // Поля формы
                items: [{
                    name: 'username',             // Имя поля для получения значения
                    fieldLabel: 'Логин',          // Метка поля
                    allowBlank: false,            // Поле обязательно для заполнения
                    value: 'admin'                // Значение по умолчанию для демо
                }, {
                    name: 'password',             // Имя поля для получения значения
                    fieldLabel: 'Пароль',         // Метка поля
                    inputType: 'password',        // Тип поля - пароль (скрывает символы)
                    allowBlank: false,            // Поле обязательно для заполнения
                    value: 'padmin'               // Значение по умолчанию для демо
                }],
                // Кнопки формы
                buttons: [{
                    text: 'Войти',                // Текст на кнопке
                    formBind: true,               // Активировать кнопку только если форма валидна
                    scale: 'medium',              // Размер кнопки
                    style: {
                        borderRadius: '0',        // Убираем скругление углов
                        backgroundColor: '#157fcc', // Цвет фона
                        borderColor: '#157fcc'    // Цвет рамки
                    },
                    // Обработчик нажатия на кнопку
                    handler: function() {
                        handleLogin(this.up('form'));
                    }
                }]
            }]
        });
        
        // Вызываем родительский метод инициализации
        this.callParent(arguments);
    }
});
